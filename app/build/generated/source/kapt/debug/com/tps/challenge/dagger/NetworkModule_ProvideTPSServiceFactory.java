// Generated by Dagger (https://dagger.dev).
package com.tps.challenge.dagger;

import com.tps.challenge.network.TPSService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideTPSServiceFactory implements Factory<TPSService> {
  private final NetworkModule module;

  public NetworkModule_ProvideTPSServiceFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public TPSService get() {
    return provideTPSService(module);
  }

  public static NetworkModule_ProvideTPSServiceFactory create(NetworkModule module) {
    return new NetworkModule_ProvideTPSServiceFactory(module);
  }

  public static TPSService provideTPSService(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideTPSService());
  }
}
